{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "stim",
  "rules": {
    "circuit": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_line"
      }
    },
    "_line": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "instruction"
                },
                {
                  "type": "SYMBOL",
                  "name": "block_start"
                },
                {
                  "type": "SYMBOL",
                  "name": "block_end"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "comment"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "\n"
        }
      ]
    },
    "comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#"
        },
        {
          "type": "PATTERN",
          "value": "[^\\n]*"
        }
      ]
    },
    "instruction": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "name"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "tag",
              "content": {
                "type": "SYMBOL",
                "name": "tag"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "parens_agruments",
              "content": {
                "type": "SYMBOL",
                "name": "parens_arguments"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "targets",
              "content": {
                "type": "SYMBOL",
                "name": "targets"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "block_start": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "instruction"
        },
        {
          "type": "STRING",
          "value": "{"
        }
      ]
    },
    "block_end": {
      "type": "STRING",
      "value": "}"
    },
    "tag": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "[^\\r\\]\\n]"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "parens_arguments": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "arg"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": ","
                  },
                  {
                    "type": "SYMBOL",
                    "name": "arg"
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "targets": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "_targ"
      }
    },
    "name": {
      "type": "PATTERN",
      "value": "[a-zA-Z][a-zA-Z0-9_]*"
    },
    "arg": {
      "type": "PATTERN",
      "value": "[0-9]+(\\.[0-9]+)?"
    },
    "_targ": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "qubit_target"
        },
        {
          "type": "SYMBOL",
          "name": "measurement_record_target"
        },
        {
          "type": "SYMBOL",
          "name": "sweep_bit_target"
        },
        {
          "type": "SYMBOL",
          "name": "pauli_target"
        },
        {
          "type": "SYMBOL",
          "name": "combiner_target"
        }
      ]
    },
    "qubit_target": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "!"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "[0-9]+"
        }
      ]
    },
    "measurement_record_target": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "rec[-"
        },
        {
          "type": "PATTERN",
          "value": "[0-9]+"
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "sweep_bit_target": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "sweep[-"
        },
        {
          "type": "PATTERN",
          "value": "[0-9]+"
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "pauli_target": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "!"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "[XYZ]"
        },
        {
          "type": "PATTERN",
          "value": "[0-9]+"
        }
      ]
    },
    "combiner_target": {
      "type": "STRING",
      "value": "*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
